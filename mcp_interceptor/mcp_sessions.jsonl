{"session_id": "17c2c444-645e-4582-97e3-cd3e0d89f425", "server_info": {"url": "https://learn.microsoft.com/api/mcp", "transport": "http", "description": "Microsoft Learn MCP Server"}, "calls": [{"request": {"method": "initialize", "args": [], "kwargs": {}, "timestamp": "2025-10-30T19:45:06.854602"}, "response": {"success": true, "result": {"_type": "InitializeResult", "meta": null, "protocolVersion": "2025-06-18", "capabilities": {"_type": "ServerCapabilities", "experimental": null, "logging": {"_type": "LoggingCapability"}, "prompts": {"_type": "PromptsCapability", "listChanged": null}, "resources": {"_type": "ResourcesCapability", "subscribe": null, "listChanged": null}, "tools": {"_type": "ToolsCapability", "listChanged": true}, "completions": null}, "serverInfo": {"_type": "Implementation", "name": "Microsoft Learn MCP Server", "title": null, "version": "1.0.0", "websiteUrl": null, "icons": null}, "instructions": "# Microsoft Learn MCP Server\r\n\r\nThis server gives structured access to official Microsoft and Azure documentation via three tools:\r\n\r\n## Tools\r\n\r\n### microsoft_docs_search\r\nSearch official documentation and return up to 10 concise, high-quality content chunks (max 500 tokens each), including title, URL, and excerpt.\r\n\r\n- Use first to get a quick, reliable overview\r\n- Ideal for grounding answers in Microsoft knowledge\r\n\r\n### microsoft_code_sample_search\r\nSearch for code snippets and examples in official Microsoft Learn documentation and return up to 20 relevant, high-quality code samples.\r\n\r\n- Use when you need to provide sample Microsoft/Azure related code in your answers.  \r\n- Ideal for generating code snippets or practical implementation examples.  \r\n- Optional parameter `language` can filter results. \r\n\r\n### microsoft_docs_fetch\r\nFetch and convert full Microsoft documentation pages to markdown.\r\n\r\n- Use after search when you need full content from a specific URL\r\n- Required for detailed tutorials, troubleshooting, prerequisites, code samples, or when search results are incomplete or outdated\r\n\r\n## Workflow\r\n\r\n1. Use `microsoft_docs_search` to find relevant documents.\r\n2. If you need code examples or practical snippets, use `microsoft_code_sample_search`.\r\n3. If deeper or complete information is needed, use `microsoft_docs_fetch`.\r\n\r\n**Search gives breadth. Code Sample Search gives practical examples. Fetch gives depth.**\r\n\r\nAll content comes from Microsoft Learn or official sources, returned in clean markdown format."}, "error": null, "timestamp": "2025-10-30T19:45:07.055894"}, "duration_ms": 201.308012008667}, {"request": {"method": "list_tools", "args": [], "kwargs": {}, "timestamp": "2025-10-30T19:45:07.056181"}, "response": {"success": true, "result": {"_type": "ListToolsResult", "meta": null, "nextCursor": null, "tools": [{"_type": "Tool", "name": "microsoft_docs_search", "title": "Microsoft Docs Search", "description": "Search official Microsoft/Azure documentation to find the most relevant and trustworthy content for a user's query. This tool returns up to 10 high-quality content chunks (each max 500 tokens), extracted from Microsoft Learn and other official sources. Each result includes the article title, URL, and a self-contained content excerpt optimized for fast retrieval and reasoning. Always use this tool to quickly ground your answers in accurate, first-party Microsoft/Azure knowledge.\n\nThe `question` parameter is no longer used, use `query` instead.\n\n## Follow-up Pattern\nTo ensure completeness, use microsoft_docs_fetch when high-value pages are identified by search. The fetch tool complements search by providing the full detail. This is a required step for comprehensive results.", "inputSchema": {"type": "object", "properties": {"query": {"description": "a query or topic about Microsoft/Azure products, services, platforms, developer tools, frameworks, or APIs", "type": "string", "default": null}, "question": {"description": "this parameter is no longer used, use query instead.", "type": "string", "default": null}}}, "outputSchema": null, "icons": null, "annotations": {"_type": "ToolAnnotations", "title": "Microsoft Docs Search", "readOnlyHint": true, "destructiveHint": false, "idempotentHint": true, "openWorldHint": null}, "meta": null}, {"_type": "Tool", "name": "microsoft_code_sample_search", "title": "Microsoft Code Sample Search", "description": "Search for code snippets and examples in official Microsoft Learn documentation. This tool retrieves relevant code samples from Microsoft documentation pages providing developers with practical implementation examples and best practices for Microsoft/Azure products and services related coding tasks. This tool will help you use the **LATEST OFFICIAL** code snippets to empower coding capabilities.\n\n## When to Use This Tool\n- When you are going to provide sample Microsoft/Azure related code snippets in your answers.\n- When you are **generating any Microsoft/Azure related code**.\n\n## Usage Pattern\nInput a descriptive query, or SDK/class/method name to retrieve related code samples. The optional parameter `language` can help to filter results.\n\nEligible values for `language` parameter include: csharp javascript typescript python powershell azurecli al sql java kusto cpp go rust ruby php", "inputSchema": {"type": "object", "properties": {"query": {"description": "a descriptive query, SDK name, method name or code snippet related to Microsoft/Azure products, services, platforms, developer tools, frameworks, APIs or SDKs", "type": "string"}, "language": {"description": "Optional parameter specifying the programming language of code snippets to retrieve. Can significantly improve search quality if provided. Eligible values: csharp javascript typescript python powershell azurecli al sql java kusto cpp go rust ruby php", "type": "string", "default": null}}, "required": ["query"]}, "outputSchema": null, "icons": null, "annotations": {"_type": "ToolAnnotations", "title": "Microsoft Code Sample Search", "readOnlyHint": true, "destructiveHint": false, "idempotentHint": true, "openWorldHint": null}, "meta": null}, {"_type": "Tool", "name": "microsoft_docs_fetch", "title": "Microsoft Docs Fetch", "description": "Fetch and convert a Microsoft Learn documentation page to markdown format. This tool retrieves the latest complete content of Microsoft documentation pages including Azure, .NET, Microsoft 365, and other Microsoft technologies.\n\n## When to Use This Tool\n- When search results provide incomplete information or truncated content\n- When you need complete step-by-step procedures or tutorials\n- When you need troubleshooting sections, prerequisites, or detailed explanations\n- When search results reference a specific page that seems highly relevant\n- For comprehensive guides that require full context\n\n## Usage Pattern\nUse this tool AFTER microsoft_docs_search when you identify specific high-value pages that need complete content. The search tool gives you an overview; this tool gives you the complete picture.\n\n## URL Requirements\n- The URL must be a valid link from the microsoft.com domain.\n\n## Output Format\nmarkdown with headings, code blocks, tables, and links preserved.", "inputSchema": {"type": "object", "properties": {"url": {"description": "URL of the Microsoft documentation page to read", "type": "string"}}, "required": ["url"]}, "outputSchema": null, "icons": null, "annotations": {"_type": "ToolAnnotations", "title": "Microsoft Docs Fetch", "readOnlyHint": true, "destructiveHint": false, "idempotentHint": true, "openWorldHint": null}, "meta": null}]}, "error": null, "timestamp": "2025-10-30T19:45:07.429025"}, "duration_ms": 373.42119216918945}, {"request": {"method": "call_tool", "args": ["microsoft_docs_search", {}], "kwargs": {}, "timestamp": "2025-10-30T19:45:07.429741"}, "response": {"success": true, "result": {"_type": "CallToolResult", "meta": null, "content": [], "structuredContent": null, "isError": false}, "error": null, "timestamp": "2025-10-30T19:45:07.632749"}, "duration_ms": 203.54890823364258}, {"request": {"method": "call_tool", "args": ["microsoft_code_sample_search", {"query": "test query"}], "kwargs": {}, "timestamp": "2025-10-30T19:45:07.633712"}, "response": {"success": true, "result": {"_type": "CallToolResult", "meta": null, "content": [{"_type": "TextContent", "type": "text", "text": "[{\"description\":\"description: Executes a SQL query to select all rows from the \\u0027test\\u0027 table, verifying that the user with SELECT role membership can access the data.\\nlanguage: sql\\n\",\"codeSnippet\":\"Select * from test  --  and see one row (1,10)\",\"link\":\"https://learn.microsoft.com/en-us/azure/azure-sql/managed-instance/migrate-sql-server-users-to-instance-transact-sql-tsql-tutorial?view=azuresql#part-5-testing-microsoft-entra-user-or-group-authentication\",\"language\":\"sql\"},{\"description\":\"description: Simulates a Dataverse query for the \\u0027Account\\u0027 entity where the status is \\u0027Active\\u0027 and the creation date is after January 1, 2023, returning a test table with specified values. This helps test app behavior without relying on actual Dataverse data.\\nlanguage: powerappsfl\\n\",\"codeSnippet\":\"Preview.SimulateDataverse({\\r\\n\\u00A0\\u00A0\\u00A0 Action: \\u0022Query\\u0022,\\r\\n\\u00A0\\u00A0\\u00A0 Entity: \\u0022Account\\u0022,\\r\\n\\u00A0\\u00A0\\u00A0 When: Table({Status: \\u0022Active\\u0022, CreatedOn: \\u0022\\u003E 2023-01-01\\u0022}),\\r\\n\\u00A0\\u00A0\\u00A0 Then: Table({Name: \\u0022Test\\u0022, Owner: \\u0022John Doe\\u0022}) // Return Value\\r\\n});\",\"link\":\"https://learn.microsoft.com/en-us/power-platform/test-engine/simulation#power-fx-functions\",\"language\":\"powerappsfl\"},{\"description\":\"description: Imports the Microsoft.Graph.Beta.Search PowerShell module and invokes a search query to find Teams chat messages containing \\u0027test\\u0027, returning the first 25 results.\\npackage: Microsoft.Graph.Beta.Search\\nlanguage: powershell\\n\",\"codeSnippet\":\"Import-Module Microsoft.Graph.Beta.Search\\r\\n\\r\\n$params = @{requests = @(\\t@{\\t\\tentityTypes = @(\\t\\t\\u0022chatMessage\\u0022\\t)\\tquery = @{\\t\\tqueryString = \\u0022test\\u0022\\t}\\tfrom = 0\\tsize = 25}\\r\\n)\\r\\n}\\r\\n\\r\\nInvoke-MgBetaQuerySearch -BodyParameter $params\",\"link\":\"https://learn.microsoft.com/en-us/graph/search-concept-chat-messages#examples\",\"language\":\"powershell\"},{\"description\":\"description: Creates and sends a search query request using the Microsoft Graph SDK for C# to find Teams chat messages containing \\u0027test\\u0027, retrieving the first 15 results and enabling top results sorting.\\npackage: Microsoft.Graph.Search.Query, Microsoft.Graph.Models\\nlanguage: http\\n\",\"codeSnippet\":\"POST https://graph.microsoft.com/v1.0/search/query\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n  \\u0022requests\\u0022: [\\r\\n    {\\r\\n      \\u0022entityTypes\\u0022: [\\r\\n        \\u0022chatMessage\\u0022\\r\\n      ],\\r\\n      \\u0022query\\u0022: {\\r\\n        \\u0022queryString\\u0022: \\u0022test\\u0022\\r\\n      },\\r\\n      \\u0022from\\u0022: 0,\\r\\n      \\u0022size\\u0022: 15,\\r\\n      \\u0022enableTopResults\\u0022: true\\r\\n    }\\r\\n  ]\\r\\n}\",\"link\":\"https://learn.microsoft.com/en-us/graph/search-concept-chat-messages#examples\",\"language\":\"http\"},{\"description\":\"description: Creates a SQL data test to verify that no game scores are negative and no games ended in a tie, expecting zero results for a pass.\\nlanguage: sql\\n\",\"codeSnippet\":\"-- This sport allows no negative scores or tie games.\\r\\n    -- For this test to pass, this query must return no results.\\r\\n    \\r\\n    select home_score, visitor_score\\r\\n    from {{ ref(\\u0027zzz_game_details\\u0027) }}\\r\\n    where home_score \\u003C 0\\r\\n    or visitor_score \\u003C 0\\r\\n    or home_score = visitor_score\",\"link\":\"https://learn.microsoft.com/en-us/azure/databricks/integrations/dbt-core-tutorial#step-3-create-and-run-tests\",\"language\":\"sql\"},{\"description\":\"description: Creates a test table, inserts sample data into it, and queries the table to verify the inserted data.\\nlanguage: sql\\n\",\"codeSnippet\":\"-- Create a table and add data\\r\\ncreate table test ( a int, b int);\\r\\ngo\\r\\n\\r\\ninsert into test values (1,10)\\r\\ngo\\r\\n\\r\\n-- Check the table values\\r\\nselect * from test;\\r\\ngo\",\"link\":\"https://learn.microsoft.com/en-us/azure/azure-sql/managed-instance/migrate-sql-server-users-to-instance-transact-sql-tsql-tutorial?view=azuresql#part-2-create-windows-users-and-groups-then-add-roles-and-permissions\",\"language\":\"sql\"},{\"description\":\"description: Defines a dbt data test SQL query to verify that win and loss counts in zzz_win_loss_records are within valid ranges and consistent with games played, expecting zero results for a pass.\\npackage: dbt\\nlanguage: sql\\n\",\"codeSnippet\":\"-- Each team participated in 4 games this season.\\r\\n    -- For this test to pass, this query must return no results.\\r\\n    \\r\\n    select wins, losses\\r\\n    from zzz_win_loss_records\\r\\n    where wins \\u003C 0 or wins \\u003E 4\\r\\n    or losses \\u003C 0 or losses \\u003E 4\\r\\n    or (wins \\u002B losses) \\u003E 4\",\"link\":\"https://learn.microsoft.com/en-us/azure/databricks/partners/prep/dbt-cloud#tutorial\",\"language\":\"sql\"},{\"description\":\"description: Within a transaction, sets the number of probes for IVFFlat index searches to 10, performs a query, commits the transaction, and then performs another query using the default probe setting.\\nlanguage: sql\\n\",\"codeSnippet\":\"BEGIN;\\r\\n\\r\\nSET LOCAL ivfflat.probes = 10;\\r\\nSELECT * FROM t_test ORDER BY embedding \\u003C=\\u003E \\u0027[1,2,3]\\u0027 LIMIT 5; -- uses 10 probes\\r\\n\\r\\nCOMMIT;\\r\\n\\r\\nSELECT * FROM t_test ORDER BY embedding \\u003C=\\u003E \\u0027[1,2,3]\\u0027 LIMIT 5; -- uses default, one probe\",\"link\":\"https://learn.microsoft.com/en-us/azure/cosmos-db/postgresql/howto-optimize-performance-pgvector#indexing\",\"language\":\"sql\"},{\"description\":\"description: Shows how to modify the JSON body to include the \\u0027isTest\\u0027 property for querying the test knowledge base using the Visual Studio Code REST Client extension.\\nlanguage: json\\n\",\"codeSnippet\":\"{\\r\\n    \\u0027question\\u0027:\\u0027size\\u0027,\\r\\n    \\u0027isTest\\u0027: true\\r\\n}\",\"link\":\"https://learn.microsoft.com/en-us/azure/ai-services/qnamaker/quickstarts/get-answer-from-knowledge-base-using-url-tool?pivots=url-test-tool-visual-studio-code-rest-client-extension#use-test-knowledge-base\",\"language\":\"json\"},{\"description\":\"description: Shows the query plan for selecting rows from \\u0027t_test\\u0027 where \\u0027tier\\u0027 matches \\u0027premium\\u0027 using a LIKE clause, demonstrating that PostgreSQL does not use the partial index when the WHERE clause does not exactly match the index definition.\\nlanguage: sql\\n\",\"codeSnippet\":\"explain select * from t_test where tier like \\u0027premium\\u0027 order by vec \\u003C#\\u003E \\u0027[2,2,2]\\u0027;\",\"link\":\"https://learn.microsoft.com/en-us/azure/cosmos-db/postgresql/howto-optimize-performance-pgvector#partial-indexes\",\"language\":\"sql\"},{\"description\":\"description: Shows how to specify the \\u0027isTest\\u0027 boolean property in JSON to indicate querying the test knowledge base.\\nlanguage: json\\n\",\"codeSnippet\":\"isTest:true\",\"link\":\"https://learn.microsoft.com/en-us/azure/ai-services/qnamaker/quickstarts/get-answer-from-knowledge-base-using-url-tool?pivots=url-test-tool-curl#use-test-knowledge-base\",\"language\":\"json\"},{\"description\":\"description: Selects all rows from the tbTest table to retrieve the inserted data.\\nlanguage: sql\\n\",\"codeSnippet\":\"SELECT * FROM tbTest\",\"link\":\"https://learn.microsoft.com/en-us/troubleshoot/sql/database-engine/development/character-data-incorrect-code-page-client-compute-differs-database#more-information\",\"language\":\"sql\"},{\"description\":\"description: SQL query to select all records from the project_table to verify data copied to the target SQL database.\\nlanguage: sql\\n\",\"codeSnippet\":\"select * from project_table\",\"link\":\"https://learn.microsoft.com/en-us/azure/data-factory/tutorial-incremental-copy-multiple-tables-portal#review-the-results\",\"language\":\"sql\"},{\"description\":\"description: Executes a SQL query to select all records from the dbo.Item table to verify the contents after running the sample application.\\nlanguage: sql\\n\",\"codeSnippet\":\"SELECT * FROM dbo.Item;\",\"link\":\"https://learn.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/calling-natively-compiled-stored-procedures-from-data-access-applications?view=sql-server-ver17#using-odbc-to-execute-a-natively-compiled-stored-procedure\",\"language\":\"sql\"},{\"description\":\"description: Runs the Query command within the SampleClientApp to query and list all digital twins currently contained in the connected Azure Digital Twins instance.\\nlanguage: cmd\\n\",\"codeSnippet\":\"Query\",\"link\":\"https://learn.microsoft.com/en-us/azure/digital-twins/tutorial-end-to-end#get-started-with-the-building-scenario\",\"language\":\"cmd\"},{\"description\":\"description: Runs a command to test and validate the Databricks Connect environment, credentials, and connection to compute, ensuring compatibility between Databricks Connect and the Databricks serverless compute version.\\nlanguage: bash\\n\",\"codeSnippet\":\"databricks-connect test\",\"link\":\"https://learn.microsoft.com/en-us/azure/databricks/dev-tools/databricks-connect/cluster-config#validate\",\"language\":\"bash\"},{\"description\":\"description: GitHub Actions workflow YAML that checks out the repository, installs Power Platform CLI and Azure CLI, authenticates with Azure and PAC CLI, runs Power Apps Test Engine tests, uploads test results as artifacts, and publishes test results using a community action.\\npackage: Power Platform CLI, Azure CLI\\nlanguage: yaml\\n\",\"codeSnippet\":\"name: Test Engine Execution\\r\\n\\r\\non:\\r\\n  push:\\r\\n    branches: [ main ]\\r\\n  pull_request:\\r\\n    branches: [ main ]\\r\\n  workflow_dispatch:  # Allow manual triggering\\r\\n\\r\\njobs:\\r\\n  test:\\r\\n    runs-on: windows-latest\\r\\n    \\r\\n    env:\\r\\n      TENANT_ID: ${{ secrets.TENANT_ID }}\\r\\n      CLIENT_ID: ${{ secrets.CLIENT_ID }}\\r\\n      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}\\r\\n      ENVIRONMENT_URL: ${{ secrets.ENVIRONMENT_URL }}\\r\\n      ENVIRONMENT_ID: ${{ secrets.ENVIRONMENT_ID }}\\r\\n    \\r\\n    steps:\\r\\n    - name: Checkout repository\\r\\n      uses: actions/checkout@v3\\r\\n      \\r\\n    - name: Install Power Platform CLI\\r\\n      run: |\\r\\n        Write-Host \\u0022Installing Power Platform CLI...\\u0022\\r\\n        $pacUrl = \\u0022https://aka.ms/PowerAppsCLI\\u0022\\r\\n        $pacZip = \\u0022$env:TEMP\\\\pac.zip\\u0022\\r\\n        $pacDestination = \\u0022$env:TEMP\\\\pac\\u0022\\r\\n        \\r\\n        # Create the destination folder if it doesn\\u0027t exist\\r\\n        if (-not (Test-Path $pacDestination)) {\\r\\n            New-Item -ItemType Directory -Path $pacDestination -Force | Out-Null\\r\\n        }\\r\\n        \\r\\n        # Download PAC CLI\\r\\n        Invoke-WebRequest -Uri $pacUrl -OutFile $pacZip\\r\\n        \\r\\n        # Extract PAC CLI\\r\\n        Expand-Archive -Path $pacZip -DestinationPath $pacDestination -Force\\r\\n        \\r\\n        # Add PAC CLI to PATH\\r\\n        $env:PATH = \\u0022$pacDestination;$env:PATH\\u0022\\r\\n        echo \\u0022$pacDestination\\u0022 \\u003E\\u003E $env:GITHUB_PATH\\r\\n        \\r\\n        # Verify installation\\r\\n        pac help\\r\\n\\r\\n    - name: Install Azure CLI\\r\\n      run: |\\r\\n        Write-Host \\u0022Installing Azure CLI...\\u0022\\r\\n        $ProgressPreference = \\u0027SilentlyContinue\\u0027\\r\\n        Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\\\\AzureCLI.msi\\r\\n        Start-Process msiexec.exe -Wait -ArgumentList \\u0027/I AzureCLI.msi /quiet\\u0027\\r\\n        rm .\\\\AzureCLI.msi\\r\\n        \\r\\n    - name: Azure CLI Authentication\\r\\n      run: |\\r\\n        Write-Host \\u0022Authenticating with Azure CLI...\\u0022\\r\\n        az login --service-principal -u \\u0022$env:CLIENT_ID\\u0022 -p \\u0022$env:CLIENT_SECRET\\u0022 --tenant \\u0022$env:TENANT_ID\\u0022 --allow-no-subscriptions\\r\\n        \\r\\n    - name: PAC CLI Authentication\\r\\n      run: |\\r\\n        Write-Host \\u0022Authenticating PAC CLI...\\u0022\\r\\n        # Create authentication profile\\r\\n        pac auth create --name TestEngineAuth --url \\u0022$env:ENVIRONMENT_URL\\u0022 --applicationId \\u0022$env:CLIENT_ID\\u0022 --clientSecret \\u0022$env:CLIENT_SECRET\\u0022 --tenant \\u0022$env:TENANT_ID\\u0022\\r\\n        \\r\\n        # Select the authentication profile\\r\\n        pac auth select --name TestEngineAuth\\r\\n      \\r\\n    - name: Run Test Engine tests\\r\\n      run: |\\r\\n        Write-Host \\u0022Running Test Engine tests...\\u0022\\r\\n        \\r\\n        # Create output directory\\r\\n        $outputDir = \\u0022./TestResults\\u0022\\r\\n        New-Item -ItemType Directory -Path $outputDir -Force | Out-Null\\r\\n        \\r\\n        # Run the tests\\r\\n        pac test run \\u0060\\r\\n          --test-plan-file \\u0022./TestPlan/testplan.te.yaml\\u0022 \\u0060\\r\\n          --environment-id \\u0022$env:ENVIRONMENT_ID\\u0022 \\u0060\\r\\n          --tenant \\u0022$env:TENANT_ID\\u0022 \\u0060\\r\\n          --logConsole info \\u0060\\r\\n          --trx \\u0060\\r\\n          --outputDirectory $outputDir\\r\\n        \\r\\n        if ($LASTEXITCODE -ne 0) {\\r\\n            Write-Error \\u0022Test execution failed with exit code $LASTEXITCODE\\u0022\\r\\n            exit $LASTEXITCODE\\r\\n        }\\r\\n    \\r\\n    - name: Upload test results\\r\\n      uses: actions/upload-artifact@v3\\r\\n      if: always()\\r\\n      with:\\r\\n        name: test-results\\r\\n        path: ./TestResults\\r\\n        \\r\\n    - name: Publish Test Results\\r\\n      uses: EnricoMi/publish-unit-test-result-action@v2\\r\\n      if: always()\\r\\n      with:\\r\\n        files: ./TestResults/**/*.trx\",\"link\":\"https://learn.microsoft.com/en-us/power-platform/test-engine/alm#integration-options\",\"language\":\"yaml\"},{\"description\":\"description: Runs a SQL query to select all rows from the Forecasts table in the PostgreSQL database, used to verify the contents of the table.\\nlanguage: sql\\n\",\"codeSnippet\":\"SELECT * FROM Forecasts;\",\"link\":\"https://learn.microsoft.com/en-us/dotnet/aspire/database/connect-to-existing-database?pivots=postgresql-ef#run-and-test-the-app-locally\",\"language\":\"sql\"},{\"description\":\"description: Creates a new SQL Server database named \\u0027csharptest\\u0027, creates a table \\u0027testdata\\u0027 with columns \\u0027id\\u0027 and \\u0027text\\u0027, and inserts sample rows into the table.\\nlanguage: sql\\n\",\"codeSnippet\":\"CREATE DATABASE csharptest;\\r\\nGO\\r\\n\\r\\nUSE csharptest;\\r\\nGO\\r\\n\\r\\nCREATE TABLE testdata\\r\\n(\\r\\n    [id] INT,\\r\\n    [text] VARCHAR (100)\\r\\n);\\r\\nGO\\r\\n\\r\\nINSERT INTO testdata (id, \\u0022text\\u0022) VALUES (4, \\u0027This sentence contains C#\\u0027);\\r\\nINSERT INTO testdata (id, \\u0022text\\u0022) VALUES (1, \\u0027This sentence does not\\u0027);\\r\\nINSERT INTO testdata (id, \\u0022text\\u0022) VALUES (3, \\u0027I love c#!\\u0027);\\r\\nINSERT INTO testdata (id, \\u0022text\\u0022) VALUES (2, NULL);\\r\\nGO\",\"link\":\"https://learn.microsoft.com/en-us/sql/language-extensions/tutorials/search-for-string-using-regular-expressions-in-c-sharp?view=sql-server-ver17#create-sample-data\",\"language\":\"sql\"},{\"description\":\"description: SQL commands to use the \\u0027todos\\u0027 database and select all records from the \\u0027todo_items\\u0027 table to verify data storage.\\nlanguage: sql\\n\",\"codeSnippet\":\"use todos;\\r\\n    select * from todo_items;\",\"link\":\"https://learn.microsoft.com/en-us/visualstudio/docker/tutorials/tutorial-multi-container-app-mysql#run-your-app-with-mysql\",\"language\":\"sql\"}]", "annotations": null, "meta": null}], "structuredContent": null, "isError": false}, "error": null, "timestamp": "2025-10-30T19:45:08.520241"}, "duration_ms": 886.6150379180908}, {"request": {"method": "call_tool", "args": ["microsoft_docs_fetch", {"url": "test query"}], "kwargs": {}, "timestamp": "2025-10-30T19:45:08.520835"}, "response": {"success": true, "result": {"_type": "CallToolResult", "meta": null, "content": [{"_type": "TextContent", "type": "text", "text": "The provided URL is not a valid Microsoft documentation link.", "annotations": null, "meta": null}], "structuredContent": null, "isError": false}, "error": null, "timestamp": "2025-10-30T19:45:08.760161"}, "duration_ms": 239.44687843322754}], "started_at": "2025-10-30T19:45:06.854585", "ended_at": "2025-10-30T19:45:08.760473", "metadata": {}}
